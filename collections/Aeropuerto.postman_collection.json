{
	"info": {
		"_postman_id": "5037edb3-1ca5-4d58-85ca-bea84593187d",
		"name": "Aeropuerto",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Crear Aeropuerto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"console.log(data)",
							"pm.globals.set(\"idAirport\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"El Dorado\",\n    \"codigo\": \"BOG\",\n    \"pais\": \"Colombia\",\n    \"ciudad\": \"Bogota\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/airports",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airports"
					]
				},
				"description": "Crea un aeropuerto en el sistema. Retorna el aeropuerto creado con el id asignado."
			},
			"response": []
		},
		{
			"name": "Crear Aeropuerto invalido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"   pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"El Dorado\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/airports",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airports"
					]
				},
				"description": "Crea un aeropuerto en el sistema. Retorna el aeropuerto creado con el id asignado."
			},
			"response": []
		},
		{
			"name": "Listar Aeropuerto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of culturas gastronómicas > ' + 0, function () {",
							"   var data = pm.response.json()",
							"   pm.expect(data.length).to.greaterThan(0)",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airports",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airports"
					]
				},
				"description": "Retorna las aeropuertos que se encuentran en el sistema, incluyendo sus detalles."
			},
			"response": []
		},
		{
			"name": "Consultar aeropuerto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airports/{{idAirport}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airports",
						"{{idAirport}}"
					]
				},
				"description": "Retorna la información a detalle del aeropuerto solicitada con el id. En caso no exista el aeropuerto con el id dado, se retorna el código 404 con el mensaje correspondiente."
			},
			"response": []
		},
		{
			"name": "Consultar aeropuerto inexistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"El aeropuerto con el id brindado no ha sido encontrado.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airports/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airports",
						"00000000-0000-0000-0000-000000000000"
					]
				},
				"description": "Retorna la información a detalle del aeropuerto solicitada con el id. En caso no exista el aeropuerto con el id dado, se retorna el código 404 con el mensaje correspondiente."
			},
			"response": []
		},
		{
			"name": "Editar aeropuerto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"El Dorado\",\n    \"codigo\": \"BOG\",\n    \"pais\": \"Colombia\",\n    \"ciudad\": \"Bogotá\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/airports/{{idAirport}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airports",
						"{{idAirport}}"
					]
				},
				"description": "Edita la información básica del aeropuerto indicada con el id. Retorna la información básica del aeropuerto, incluyendo su id. En caso no exista el aeropuerto con el id dado, se retorna el código 404 con el mensaje correspondiente."
			},
			"response": []
		},
		{
			"name": "Editar aeropuerto inexistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"El aeropuerto con el id brindado no ha sido encontrado.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"El Dorado\",\n    \"codigo\": \"BOG\",\n    \"pais\": \"Colombia\",\n    \"ciudad\": \"Bogotá\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/airports/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airports",
						"00000000-0000-0000-0000-000000000000"
					]
				},
				"description": "Edita la información básica del aeropuerto indicada con el id. Retorna la información básica del aeropuerto, incluyendo su id. En caso no exista el aeropuerto con el id dado, se retorna el código 404 con el mensaje correspondiente."
			},
			"response": []
		},
		{
			"name": "Eliminar aeropuerto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airports/{{idAirport}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airports",
						"{{idAirport}}"
					]
				},
				"description": "Elimina el aeropuerto indicada con el id y toda su información que tuviese relacionada a ella. No retorna contenido en caso de éxito. En caso no exista el aeropuerto con el id dado, se retorna el código 404 con el mensaje correspondiente."
			},
			"response": []
		},
		{
			"name": "Eliminar aeropuerto inexistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"El aeropuerto con el id brindado no ha sido encontrado.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airports/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airports",
						"00000000-0000-0000-0000-000000000000"
					]
				},
				"description": "Elimina el aeropuerto indicada con el id y toda su información que tuviese relacionada a ella. No retorna contenido en caso de éxito. En caso no exista el aeropuerto con el id dado, se retorna el código 404 con el mensaje correspondiente."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api/v1",
			"type": "string"
		}
	]
}